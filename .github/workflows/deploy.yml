name: Build & Deploy to K8s

on:
  push:
    branches: ["main"]

env:
  REGISTRY_ID: crpagrrnlkadtf6n9au1
  IMAGE_NAME: mini-blog
  NAMESPACE: mini-blog
  DEPLOYMENT: mini-blog

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check secrets presence
        run: |
          [ -n "${{ secrets.YC_SA_KEY_JSON_B64 }}" ] || { echo "YC_SA_KEY_JSON_B64 is empty"; exit 1; }
          [ -n "${{ secrets.KUBECONFIG_BASE64 }}" ] || { echo "KUBECONFIG_BASE64 is empty"; exit 1; }

      - name: Install yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Auth with SA key and get IAM token
        id: iam
        run: |
          printf '%s' "${{ secrets.YC_SA_KEY_JSON }}" > sa-key.json
          yc config set service-account-key sa-key.json
          IAM_TOKEN=$(yc iam create-token)
          echo "IAM_TOKEN=${IAM_TOKEN}" >> $GITHUB_OUTPUT

      - name: Docker login to Yandex CR
        run: |
          echo "${{ steps.iam.outputs.IAM_TOKEN }}" | docker login cr.yandex -u iam --password-stdin

      - name: Build & Push image
        run: |
          IMAGE="cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          # (опционально) тег latest:
          # docker tag "$IMAGE" "cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest"
          # docker push "cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest"

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config
          kubectl version --client
          kubectl cluster-info

      - name: Set image & rollout
        run: |
          kubectl -n "${{ env.NAMESPACE }}" set image deploy/${{ env.DEPLOYMENT }} ${{ env.DEPLOYMENT }}="${IMAGE}"
          kubectl -n "${{ env.NAMESPACE }}" rollout status deploy/${{ env.DEPLOYMENT }}"