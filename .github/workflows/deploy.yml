name: Build & Deploy to K8s

on:
  push:
    branches: ["main"]

env:
  REGISTRY_ID: crpagrrnlkadtf6n9au1            
  IMAGE_NAME: mini-blog                        
  NAMESPACE: mini-blog                        
  DEPLOYMENT: mini-blog                        

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get IAM token (via API)
        id: iam
        run: |
          # сохраняем ключ аккуратно (как есть)
          printf '%s' "${{ secrets.YC_SA_KEY_JSON }}" > sa-key.json
          # запрашиваем IAM токен у Yandex API
          IAM_TOKEN=$(curl -s https://iam.api.cloud.yandex.net/iam/v1/tokens \
            -H 'Content-Type: application/json' \
            -d @sa-key.json | python - <<'PY'
          import sys,json
          data=json.load(sys.stdin)
          print(data["iamToken"])
          PY
                    )
          echo "IAM_TOKEN=${IAM_TOKEN}" >> $GITHUB_OUTPUT

      - name: Docker login to Yandex CR
        run: |
          echo "${{ steps.iam.outputs.IAM_TOKEN }}" | docker login cr.yandex -u iam --password-stdin

      - name: Build & Push image
        run: |
          IMAGE="cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config
          kubectl version --client
          kubectl cluster-info

      - name: Set image & rollout
        run: |
          kubectl -n "${{ env.NAMESPACE }}" set image deploy/${{ env.DEPLOYMENT }} ${{ env.DEPLOYMENT }}="${IMAGE}"
          kubectl -n "${{ env.NAMESPACE }}" rollout status deploy/${{ env.DEPLOYMENT }}